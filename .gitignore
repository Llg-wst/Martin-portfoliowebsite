# Node modules
node_modules/

# Build outputs
/dist
/build
/out
/.sass-cache

# System files
.DS_Store
Thumbs.db

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov/

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# IDE / Editor directories
.idea/
.vscode/
*.swp
*.swo
*.sublime*
*.esproj
*.sln
*.sw?
.project
.settings/

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# temp files, for example, by editors
*~
*.temp

# OS generated files
ehthumbs.db
Icon?
Desktop.ini

# Images
# Add specific directories if you want to exclude images
# /path/to/your/images/

# Compiled Source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# It's a good idea to keep your package lock files around to ensure that other developers
# on your project are installing exactly what you expect.
# However, if you're building a library that is supposed to work across multiple Node
# versions, you might want to uncomment the next line and commit your package lock file.
# *.lock

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store*
Icon?
._*

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
